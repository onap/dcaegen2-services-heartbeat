{
  "comments": [
    {
      "key": {
        "uuid": "2cae1cc5_c948ac88",
        "filename": "miss_htbt_service/db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 105
      },
      "writtenOn": "2023-02-22T13:43:41Z",
      "side": 1,
      "message": "Adding code to test that this exception works would be tricky, but doable by using threading or a subprocess that sleeps and then creates the file. It can be validated by also mocking out logging.getLogger() and checking to see that the \"Json file\" message got produced.\n\nProbably not worth it to get 3 additional lines of code coverage. Could add a comment though about how to add a test for it. But not required.",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43e787e3_08b766cc",
        "filename": "miss_htbt_service/db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 93
      },
      "writtenOn": "2023-02-22T14:39:30Z",
      "side": 1,
      "message": "The exception can be met by passing invalid json_file path - can add that as separate test",
      "parentUuid": "2cae1cc5_c948ac88",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a5950df_0c41db5a",
        "filename": "miss_htbt_service/db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 93
      },
      "writtenOn": "2023-02-22T21:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43e787e3_08b766cc",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8900fcd7_037c8353",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 105
      },
      "writtenOn": "2023-02-22T13:43:41Z",
      "side": 1,
      "message": "how about passing in sleeptime\u003d1 here?",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10adde4_5ba0bcf2",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 93
      },
      "writtenOn": "2023-02-22T14:39:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8900fcd7_037c8353",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7fa7eb7_1148b83d",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 105
      },
      "writtenOn": "2023-02-22T13:43:41Z",
      "side": 1,
      "message": "could you call db_monitoring_singlepass() here?",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4e6cdc_64595580",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 93
      },
      "writtenOn": "2023-02-22T14:39:30Z",
      "side": 1,
      "message": "Wondering what difference would that make? The method db_monitoring_singlepass() get called from the wrapper db_monitoring() and different conditions are excercised through varying input/mock.",
      "parentUuid": "d7fa7eb7_1148b83d",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "773ab52d_101b0efa",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 93
      },
      "writtenOn": "2023-02-22T21:03:19Z",
      "side": 1,
      "message": "Reduced timeout to 1 sec in test",
      "parentUuid": "ef4e6cdc_64595580",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a1ab1e_aeca39a2",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 105
      },
      "writtenOn": "2023-02-22T13:43:41Z",
      "side": 1,
      "message": "could you call db_monitoring_singlepass() here?",
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20267463_bbfdb137",
        "filename": "tests/test_db_monitoring.py",
        "patchSetId": 4
      },
      "lineNbr": 192,
      "author": {
        "id": 105
      },
      "writtenOn": "2023-02-22T13:43:41Z",
      "side": 1,
      "message": "could you call db_monitoring_singlepass() here?",
      "range": {
        "startLine": 192,
        "startChar": 8,
        "endLine": 192,
        "endChar": 21
      },
      "revId": "0cad03f67b8d593089036f622f9416fc68d2d021",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}